// app/api/line/webhook/route.ts
import { NextRequest, NextResponse } from "next/server";
import {
  verifyLineSignature,
  lineReplyMessages,
  lineReplyText,
  buildPromoFlex,
  buildCreditHelpFlex,
  LineMessage,
} from "@/lib/line";
import { buildPromoReplyFromText, promoSummary } from "@/lib/promos";
import { askAI } from "@/lib/ai";
import { trackUserId } from "@/lib/users";

export const runtime = "nodejs"; // ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ Node ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô HMAC

const BRAND_NAME = process.env.BRAND_NAME ?? "‡∏°‡∏µ‡πÇ‡∏ä‡∏Ñ‡∏î‡∏≠‡∏ó‡∏Ñ‡∏≠‡∏°";
const LINE_HANDLE = process.env.LINE_OA_HANDLE ?? "@mechoke";
const SIGNUP_URL = process.env.SIGNUP_URL || "https://www.mechoke.com/";

/** ---------------- Admin-only: ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà "‡∏ö‡∏≠‡∏ó‡∏´‡πâ‡∏≤‡∏°‡∏ï‡∏≠‡∏ö" ----------------
 * ‡∏Å‡∏£‡∏ì‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ö‡∏≠‡∏ó
 * ‡∏ñ‡πâ‡∏≤‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏°‡∏≤‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ ‡∏ö‡∏≠‡∏ó‡∏à‡∏∞ "‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö" (skip)
 */
const ADMIN_ONLY_PHRASES = [
  "‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
  "‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß",
  "‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏Æ‡∏á‡πÜ ‡∏õ‡∏±‡∏á‡πÜ",
  "‡∏£‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô",
  "‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÅ‡∏•‡πâ‡∏ß",
  "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢",
];

/** ---------------- Sensitive: ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô/‡∏¢‡∏π‡∏™/‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ ----------------
 * ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ AI ‡∏ï‡∏≠‡∏ö ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
 */
const SENSITIVE_KEYWORDS = [
  "‡∏Ç‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô",
  "‡∏•‡∏∑‡∏°‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô",
  "‡∏à‡∏≥‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ",
  "‡∏•‡∏∑‡∏°‡∏¢‡∏π‡∏™",
  "‡∏¢‡∏π‡∏™‡πÄ‡∏ã‡∏≠‡∏£‡πå",
  "‡∏Ç‡∏≠‡∏¢‡∏π‡∏™",
  "‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏´‡∏±‡∏™",
  "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£",
  "‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå",
];

/** ---------------- Quick Router: ‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏õ‡πá‡∏ô array ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°/‡πÄ‡∏ü‡∏•‡πá‡∏Å‡∏ã‡πå ---------------- */
function routeQuickAnswerToMessages(text: string): LineMessage[] | null {
  const t = (text || "").trim().toLowerCase();

  // ‡∏Ç‡∏≠ "‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£" ‚Üí ‡∏™‡πà‡∏á Flex ‡πÇ‡∏õ‡∏£‡∏†‡∏≤‡∏û
  if (/(‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£|‡πÇ‡∏õ‡∏£‡∏†‡∏≤‡∏û|promotion image|‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô‡πÅ‡∏ö‡∏ö‡∏£‡∏π‡∏õ)/i.test(t)) {
    return [buildPromoFlex({ ctaUrl: SIGNUP_URL })];
  }

  // ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡∏ô
  if (/(‡πÇ‡∏õ‡∏£|promotion|‡πÇ‡∏õ‡∏£‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ|‡πÇ‡∏õ‡∏£ ‡∏û‡∏¥‡πÄ‡∏®‡∏©|‡∏ù‡∏≤‡∏Å 300|‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏°|‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô|vip)/i.test(t)) {
    if (/(‡πÇ‡∏õ‡∏£‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ|‡πÇ‡∏õ‡∏£ ‡∏û‡∏¥‡πÄ‡∏®‡∏©|‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á|promotion)/i.test(t)) {
      return [{ type: "text", text: promoSummary() }];
    }
    const reply = buildPromoReplyFromText(text);
    if (reply) return [{ type: "text", text: reply }];
  }

  // ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤
  if (/(‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï|‡πÄ‡∏á‡∏¥‡∏ô|‡∏¢‡∏≠‡∏î).*(‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤|‡πÑ‡∏°‡πà‡∏°‡∏≤|‡∏´‡∏≤‡∏¢|‡∏Ñ‡πâ‡∏≤‡∏á)/i.test(t)) {
    return [
      buildCreditHelpFlex(),
      {
        type: "text",
        text: [
          "‡∏ô‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏ô‡∏∞‡∏Ñ‡∏∞ üôè",
          "‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡πÅ‡∏à‡πâ‡∏á '‡∏¢‡∏π‡∏™‡πÄ‡∏ã‡∏≠‡∏£‡πå/‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£' + '‡πÄ‡∏ß‡∏•‡∏≤/‡∏¢‡∏≠‡∏î‡∏ù‡∏≤‡∏Å' + '‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£/‡∏™‡∏•‡∏¥‡∏õ‡∏¢‡πà‡∏≠'",
          `‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡πâ‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏Ñ‡πà‡∏∞ ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ ${LINE_HANDLE}`,
        ].join("\n"),
      },
    ];
  }

  // ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
  if (/(‡∏™‡∏°‡∏±‡∏Ñ‡∏£|regis|register)/i.test(t)) {
    return [
      {
        type: "text",
        text: [
          "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞ ‚ú®",
          `‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏°‡∏±‡∏Ñ‡∏£: ${SIGNUP_URL}`,
          "‡∏ù‡∏≤‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ ‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡πÅ‡∏ñ‡∏°‡∏ü‡∏£‡∏µ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏Ñ‡πà‡∏∞ üéÅ",
        ].join("\n"),
      },
    ];
  }

  // ‡∏ñ‡∏≠‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥
  if (/(‡∏ñ‡∏≠‡∏ô|withdraw).*(‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà|min|‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥)/i.test(t)) {
    return [{ type: "text", text: "‡∏ñ‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥ 100 ‡∏ö‡∏≤‡∏ó‡∏Ñ‡πà‡∏∞ ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ 24 ‡∏ä‡∏°. ‚è±Ô∏è" }];
  }

  // ‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏≠‡∏Å‡∏ú‡∏•/‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö (‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏±‡πâ‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á)
  if (/(‡∏´‡∏ß‡∏¢|‡∏•‡∏≤‡∏ß|‡∏Æ‡∏≤‡∏ô‡∏≠‡∏¢|‡∏´‡∏∏‡πâ‡∏ô|‡πÄ‡∏ß‡∏•‡∏≤|‡∏≠‡∏≠‡∏Å‡∏ú‡∏•|‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö)/i.test(t)) {
    return [
      {
        type: "text",
        text: [
          "‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏≠‡∏Å‡∏ú‡∏• (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á):",
          "‚Ä¢ ‡∏•‡∏≤‡∏ß‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏á 12:30 ‡∏ô.",
          "‚Ä¢ ‡∏•‡∏≤‡∏ß‡∏™‡∏ö‡∏≤‡∏¢‡∏î‡∏µ 15:00 ‡∏ô.",
          "‚Ä¢ ‡∏•‡∏≤‡∏ß‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤ 17:30 ‡∏ô.",
          "‚Ä¢ ‡∏Æ‡∏≤‡∏ô‡∏≠‡∏¢‡∏õ‡∏Å‡∏ï‡∏¥ 18:30 ‡∏ô.",
          "‚Ä¢ ‡∏´‡∏∏‡πâ‡∏ô‡πÑ‡∏ó‡∏¢‡∏£‡∏≠‡∏ö‡∏ö‡πà‡∏≤‡∏¢ 16:30 ‡∏ô.",
          `‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡πà ${LINE_HANDLE}`,
        ].join("\n"),
      },
    ];
  }

  return null; // ‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤ Intent ‚Üí ‡πÉ‡∏´‡πâ Fallback ‡πÑ‡∏õ ChatGPT
}

/** ---------------- Helpers ---------------- */
function includesAny(text: string, list: string[]): boolean {
  const s = (text || "").toLowerCase();
  return list.some((kw) => s.includes(kw.toLowerCase()));
}

/** ---------------- POST: LINE Webhook ---------------- */
export async function POST(req: NextRequest) {
  const signature = req.headers.get("x-line-signature") || undefined;
  const rawBody = await req.text();

  // Production: ‡∏ï‡∏£‡∏ß‡∏à‡∏•‡∏≤‡∏¢‡πÄ‡∏ã‡πá‡∏ô, Dev: ‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ó‡∏™‡∏á‡πà‡∏≤‡∏¢
  const isDev = process.env.NODE_ENV !== "production";
  if (!isDev) {
    const ok = verifyLineSignature(rawBody, signature);
    if (!ok) return NextResponse.json({ error: "Invalid signature" }, { status: 401 });
  }

  const body = JSON.parse(rawBody || "{}");
  const events: any[] = body.events ?? [];

  for (const e of events) {
    try {
      // ‡πÄ‡∏Å‡πá‡∏ö userId/roomId/groupId ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö debug & push console
      const uid =
        e?.source?.userId || e?.source?.roomId || e?.source?.groupId || undefined;
      if (uid) trackUserId(uid).catch(() => {});

      // ‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ text message
      if (e.type !== "message" || e.message?.type !== "text") continue;

      const userText: string = e.message.text || "";
      console.info("[webhook] text:", userText);

      // 0) Admin-only phrases ‚Üí ‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö (‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
      if (includesAny(userText, ADMIN_ONLY_PHRASES)) {
        console.info("[skip] admin-only phrase detected. no bot reply.");
        continue;
      }

      // 1) Sensitive (‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô/‡∏¢‡∏π‡∏™/‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£) ‚Üí ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ AI ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
      if (includesAny(userText, SENSITIVE_KEYWORDS)) {
        console.info("[reply] via Sensitive/Admin script");
        await lineReplyMessages(e.replyToken, [
          {
            type: "text",
            text:
              "‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏Ç‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏Ñ‡∏∏‡∏ì‡∏û‡∏µ‡πà‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ üìû ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞",
          },
          {
            type: "text",
            text: "‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡∏∞ üôè",
          },
        ]);
        continue;
      }

      // 2) Intent router
      const intentMsgs = routeQuickAnswerToMessages(userText);
      if (intentMsgs && intentMsgs.length > 0) {
        console.info("[reply] via Router/Intent");
        await lineReplyMessages(e.replyToken, intentMsgs);
        continue;
      }

      // 3) Fallback ‚Üí ChatGPT (‡πÉ‡∏´‡πâ AI ‡∏ï‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠)
      console.info("[reply] via ChatGPT Fallback");
      const aiText = await askAI(userText, {
        brandName: BRAND_NAME,
        lineHandle: LINE_HANDLE,
      });

      const finalText =
        (aiText && aiText.trim()) ||
        "‡∏ô‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏á‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡∏•‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ üôè";

      await lineReplyText(e.replyToken, finalText);
    } catch (err) {
      // ‡πÅ‡∏à‡πâ‡∏á‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
      try {
        await lineReplyText(
          e.replyToken,
          "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏á‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡∏•‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞ üôè"
        );
      } catch {}
      console.error("[webhook error]", err);
    }
  }

  return NextResponse.json({ ok: true });
}

/** ---------------- GET: Health ---------------- */
export function GET() {
  return NextResponse.json({
    ok: true,
    brand: BRAND_NAME,
    handle: LINE_HANDLE,
    hint: "LINE ‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å endpoint ‡∏ô‡∏µ‡πâ‡∏î‡πâ‡∏ß‡∏¢ POST ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô",
  });
}